{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service class `TicTacToeService` responsible for handling the game logic of a Tic Tac Toe game. It manages game state, moves, check for win/tie conditions, and includes AI move logic using a basic minimax strategy. It exposes methods for mode setting, resetting the game, making moves, and internal AI decision-making.", "external_files": ["@angular/core"], "external_methods": ["Injectable"], "published": ["TicTacToeService"], "classes": [{"name": "TicTacToeService", "description": "Angular service that encapsulates the game logic and state management for Tic Tac Toe."}], "methods": [{"name": "setMode", "description": "Sets the game mode ('2p' or 'ai') and resets the game."}, {"name": "reset", "description": "Resets the game board and state variables to start a new game."}, {"name": "makeMove", "description": "Attempts to make a move at the specified index; updates game state and triggers AI move if applicable."}, {"name": "switchPlayer", "description": "Switches the current player between 'X' and 'O'."}, {"name": "checkGameOver", "description": "Checks current board state for a win or tie condition and updates game-over status."}, {"name": "aiPlay", "description": "Performs AI move with a delay, calling internal move selection logic."}, {"name": "findAIMove", "description": "Implements AI logic to decide next move, prioritizing winning, blocking opponent, or taking strategic positions."}], "calls": ["this.checkGameOver()", "this.switchPlayer()", "setTimeout()", "this.findAIMove()"], "search-terms": ["Angular Tic Tac Toe service", "game state management", "AI move logic", "minimax for Tic Tac Toe", "game win detection", "game reset"], "state": 2, "file_id": 24, "knowledge_revision": 57, "git_revision": "", "revision_history": [{"49": ""}, {"57": ""}], "ctags": [{"_type": "tag", "name": "TicTacToeService", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-9a122574/tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "pattern": "/^export class TicTacToeService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-9a122574/tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "pattern": "/^      const [a, b, c] = pattern;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "aiMove", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-9a122574/tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "pattern": "/^      const aiMove = this.findAIMove();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-9a122574/tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "pattern": "/^      const [a, b, c] = pattern;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-9a122574/tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "pattern": "/^      const [a, b, c] = pattern;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "corners", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-9a122574/tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "pattern": "/^    const corners = [0,2,6,8].filter(i => !this.board[i]);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-9a122574/tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "pattern": "/^    for (let i = 0; i < 9; i++) {$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "pattern", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-9a122574/tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "pattern": "/^    for (const pattern of this.winPatterns) {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "sides", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-online-9a122574/tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "pattern": "/^    const sides = [1,3,5,7].filter(i => !this.board[i]);$/", "language": "TypeScript", "kind": "constant"}], "hash": "83f0453274f0e5044fb89020236a2630", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/app/tic-tac-toe.service.ts", "fields": [{"name": "for (let i = 0; i < 9; i++) {", "scope": "", "scopeKind": "", "description": "unavailable"}]}